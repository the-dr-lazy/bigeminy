// module Data.EuclideanRing, generated by purescript-tsd-gen 0.3.0.0
import * as Data_CommutativeRing from "../Data.CommutativeRing";
import * as Data_Eq from "../Data.Eq";
export type /*synonym*/ EuclideanRing<a> = { degree: (_: a) => number; div: (_: a) => (_: a) => a; mod: (_: a) => (_: a) => a; CommutativeRing0: (_: {}) => Data_CommutativeRing.CommutativeRing< a > };
export const degree: <a>(_: EuclideanRing< a >) => (_: a) => number;
export const div: <a>(_: EuclideanRing< a >) => (_: a) => (_: a) => a;
export const mod: <a>(_: EuclideanRing< a >) => (_: a) => (_: a) => a;
export const gcd: <a>(_: Data_Eq.Eq< a >) => (_: EuclideanRing< a >) => (_: a) => (_: a) => a;
export const lcm: <a>(_: Data_Eq.Eq< a >) => (_: EuclideanRing< a >) => (_: a) => (_: a) => a;
export const /*instance*/ euclideanRingInt: EuclideanRing< number >;
export const /*instance*/ euclideanRingNumber: EuclideanRing< number >;
export {};
